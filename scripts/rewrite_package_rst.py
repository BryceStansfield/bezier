# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Replace autogenerated contents of bezier package RST.

This is needed since the presence of ``__all__`` in
the package ``__init__.py`` causes Sphinx to try to document
each included element multiple times.
"""


import os


EXPECTED = """\
bezier package
==============

.. automodule:: bezier
    :members:
    :inherited-members:
    :undoc-members:
    :show-inheritance:

Submodules
----------

.. toctree::

   bezier.curve
   bezier.curved_polygon
   bezier.surface

"""

DESIRED = """\
bezier package
==============

.. automodule:: bezier

Submodules
----------

.. toctree::

   bezier.curve
   bezier.curved_polygon
   bezier.surface
"""

_SCRIPTS_DIR = os.path.dirname(__file__)
_DOCS_DIR = os.path.abspath(
    os.path.join(_SCRIPTS_DIR, '..', 'docs'))
FILENAME = os.path.join(_DOCS_DIR, 'reference', 'bezier.rst')


def main():
    """Main entry point to replace autogenerated contents.

    Raises:
        ValueError: If the file doesn't contain the expected or
            desired contents.
    """
    with open(FILENAME, 'r') as file_obj:
        contents = file_obj.read()

    if contents == EXPECTED:
        with open(FILENAME, 'w') as file_obj:
            file_obj.write(DESIRED)
    elif contents != DESIRED:
        raise ValueError('Unexpected contents', contents,
                         'Expected', EXPECTED)


if __name__ == '__main__':
    main()

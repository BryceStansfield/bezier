version: 1.0.{build}.{branch}

build: off

matrix:
  fast_finish: true

# We always use a 64-bit machine, but can build x86 distributions
# with the PYTHON_ARCH variable.
platform:
    - x64

environment:

  global:

    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: https://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\windows_sdk.cmd"
    MINGW_32: C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin
    MINGW_64: C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin

  matrix:

    # See: https://www.appveyor.com/docs/installed-software/#python

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      TEST_TYPE: base

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      TEST_TYPE: base

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"
      TEST_TYPE: base

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      TEST_TYPE: base

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"
      TEST_TYPE: base

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      TEST_TYPE: cover

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      TEST_TYPE: functional

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      TEST_TYPE: doctest

install:
  - cmd: echo "Filesystem root:"
  - dir C:\

  - echo "Installed SDKs:"
  - dir "C:/Program Files/Microsoft SDKs/Windows"

  # Prepend "current" Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%

  # Append MinGW to the PATH of this build so ``gfortran`` is visible
  # to ``numpy.distutils``.
  - ps: |
      $PYTHON_ARCH = $env:PYTHON_ARCH
      If ($PYTHON_ARCH -eq 32) {
          $MINGW = $env:MINGW_32
      } Else {
          $MINGW = $env:MINGW_64
      }
      $env:Path += ";$MINGW"

  # Check that we have the expected version and architecture for Python
  - python appveyor\env_info.py

  # Packaging requirements
  - python -m pip install --upgrade pip setuptools
  - python -m pip install --upgrade wheel

  # Requirements for `bezier` install
  - python -m pip install --upgrade numpy

  # Install ``bezier``.
  - "%CMD_IN_ENV% python -m pip install -vv ."

  # Install (hardcoded) test dependencies (should use ``nox``).

  # Install (hardcoded) conditional (on base) test dependencies.
  - ps: if ($env:TEST_TYPE -eq "base")
        {
          python -m pip install pytest mock "scipy >= 1.0.0rc1";
        }

  # Install (hardcoded) conditional (on cover) test dependencies.
  - ps: if ($env:TEST_TYPE -eq "cover")
        {
          python -m pip install pytest mock coverage pytest-cov "scipy >= 1.0.0rc1";
        }

  # Install (hardcoded) conditional (on functional) test dependencies.
  - ps: if ($env:TEST_TYPE -eq "functional")
        {
          python -m pip install pytest mock;
        }

  # Install (hardcoded) conditional (on doctest) test dependencies.
  - ps: if ($env:TEST_TYPE -eq "doctest")
        {
          python -m pip install Sphinx sphinx-rtd-theme sphinx-docstring-typing mock;
          $env:NO_IMAGES = "True";
        }

test_script:
  - ps: if ($env:TEST_TYPE -eq "base")
        {
          python -m pytest tests/unit;
        }
  - ps: if ($env:TEST_TYPE -eq "cover")
        {
          python -m pytest `
              --cov=bezier `
              --cov=tests.unit `
              tests/unit;
        }
  - ps: if ($env:TEST_TYPE -eq "functional")
        {
          python -m pytest tests/functional
        }
  - ps: if ($env:TEST_TYPE -eq "doctest")
        {
          sphinx-build -W `
              -b doctest `
              -d docs/build/doctrees `
              docs `
              docs/build/doctest;
        }
